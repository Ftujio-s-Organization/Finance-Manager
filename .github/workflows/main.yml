name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build-angular:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 12

      - name: Install global dependencies
        run: npm ci

      - name: Install dependencies
        working-directory: ./angular
        run: npm ci

      - name: Build app
        working-directory: ./angular
        run: npm run build:ci

  test-angular:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 12

      - name: Install global dependencies
        run: npm ci

      - name: Install dependencies
        working-directory: ./angular
        run: npm ci

      - name: Run unit tests
        working-directory: ./angular
        run: npm run test:ci

      - name: Code coverage
        uses: codecov/codecov-action@v2.1.0

  build-electron:
    needs: build-angular
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 12

      - name: Install global dependencies
        run: npm ci

      - name: Install dependencies
        working-directory: ./electron-app
        run: npm ci

      - name: Typescript
        working-directory: ./electron-app
        run: npm run tsc:prod

      - name: Make
        working-directory: ./electron-app
        run: npm run make

      - name: Read app version
        id: read-version
        uses: ./.github/actions/read-version

      - name: Create tar
        id: create-tar
        env:
          zip_name: release-${{ matrix.os }}-${{ steps.read-version.outputs.version }}.tar.gz
        run: |
          echo "::set-output name=zip_name::${{ env.zip_name }}"
          tar -cz -f ./${{ env.zip_name }} ./electron-app/out/*

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ steps.create-tar.outputs.zip_name }}
          path: ${{ steps.create-tar.outputs.zip_name }}

  gh-release:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: build-electron
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 12

      - name: Read app version
        id: read-version
        uses: ./.github/actions/read-version

      - name: Download build artifact for windows
        id: download-windows-artifact
        env:
          zip_name: release-windows-latest-${{ steps.read-version.outputs.version }}.tar.gz
        uses: actions/download-artifact@v2.0.10
        with:
          name: ${{ env.zip_name }}
          path: ${{ env.zip_name }}

      - name: Download build artifact for linux
        id: download-linux-artifact
        env:
          zip_name: release-ubuntu-latest-${{ steps.read-version.outputs.version }}.tar.gz
        uses: actions/download-artifact@v2.0.10
        with:
          name: ${{ env.zip_name }}
          path: ${{ env.zip_name }}

      - name: Download build artifact for mac
        id: download-mac-artifact
        env:
          zip_name: release-macos-latest-${{ steps.read-version.outputs.version }}.tar.gz
        uses: actions/download-artifact@v2.0.10
        with:
          name: ${{ env.zip_name }}
          path: ${{ env.zip_name }}

      - name: Release to GitHub
        uses: ncipollo/release-action@v1
        env:
          version: ${{ steps.read-version.outputs.version }}
        with:
          artifacts: release-windows-latest-${{ env.version }}.tar.gz, release-ubuntu-latest-${{ env.version }}.tar.gz, release-macos-latest-${{ env.version }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.version }}
